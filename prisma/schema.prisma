generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions  Session[]
  resumes   Resume[]
}

model Session {
  mongoId   String   @id @default(auto()) @map("_id") @db.ObjectId
  id        String   @unique
  userId    String   @db.ObjectId
  token     String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Resume {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId

  title       String?
  description String?

  firstName   String?  @map("first_name")
  lastName    String?  @map("last_name")
  jobTitle    String?  @map("job_title")
  city        String?
  country     String?
  phone       String?
  email       String?
  skills      String[]
  fieldsOrder String[] @map("fields_order")

  workExperiences WorkExperience[]
  educations      Education[]
  summary         String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("resumes")
}

model WorkExperience {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  resumeId    String    @db.ObjectId
  position    String?
  company     String?
  description String?
  startDate   DateTime? @map("start_date")
  endDate     DateTime? @map("end_date")

  resume Resume @relation(fields: [resumeId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("work_experiences")
}

model Education {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  resumeId  String    @db.ObjectId
  school    String?
  degree    String?
  startDate DateTime? @map("start_date")
  endDate   DateTime? @map("end_date")

  resume Resume @relation(fields: [resumeId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("educations")
}
